/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.views;

import com.accarga.DAOLicenciaImpl;
import com.accarga.Dashboard;
import com.interfaces.DAOLicencia;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Flia Castiblanco
 */
public class Licencias extends javax.swing.JPanel {
    
    
    
    
    /**
     * Creates new form Principal
     */
    public Licencias() {
        initComponents();
        InitStyles();
        LoadConductores();
                        
        
    }

    private void InitStyles(){
        
        Title.putClientProperty( "FlatLaf.style", "font: bold $h2.regular.font" );
        buscarTxt.putClientProperty("JTextField.placeholderText", "Ingrese la cedula del conductor a buscar");
        //ViewTxt1.setForeground(Color.black);
        // ViewTxt2.putClientProperty( "FlatLaf.styleClass", "large" );
        
        
    }
    
    private void LoadConductores() {
        try {
            DAOLicencia dao = new DAOLicenciaImpl();
            
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); //Genera el modelo de Tabla de la BD para ponerla en pantalla, y no en consola
            dao.listar("").forEach((u) -> model.addRow(new Object[]{u.getId_licencia(), u.getCedula_cond(), u.getFecha_Expedicion(), u.getFecha_Vencimiento(), u.getCategoriaLic(), u.getRestriccion_Lic(), u.getEstado_Lic()}));          

        } catch(Exception e) {
            System.out.println(e.getMessage());
        }
    
    }
    
     
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        buscarTxt = new javax.swing.JTextField();
        buscarBtn = new javax.swing.JButton();
        newBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(750, 430));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setPreferredSize(new java.awt.Dimension(750, 430));

        Title.setText("LICENCIAS DE TRANSITO");

        buscarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarTxtActionPerformed(evt);
            }
        });

        buscarBtn.setBackground(new java.awt.Color(13, 138, 200));
        buscarBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buscarBtn.setForeground(new java.awt.Color(255, 255, 255));
        buscarBtn.setText("Buscar");
        buscarBtn.setBorder(null);
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });

        newBtn.setBackground(new java.awt.Color(13, 138, 200));
        newBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newBtn.setForeground(new java.awt.Color(255, 255, 255));
        newBtn.setText("Nuevo");
        newBtn.setBorder(null);
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(13, 138, 200));
        editBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("Editar");
        editBtn.setBorder(null);
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(13, 138, 200));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Borrar");
        deleteBtn.setBorder(null);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero Licencia", "Cedula Conductor", "Fecha Expedición", "Fecha Vencimiento", "Categoría", "Restricciones", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(newBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(editBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                                .addComponent(buscarTxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(40, 40, 40))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // Cuando se oprima el Boton de Borrar, Se obtiene el valor de las filas seleccionadas, y se borran después:
        DAOLicencia dao = new DAOLicenciaImpl();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        if (jTable1.getSelectedRows().length < 1){            
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar una fila para Eliminar \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            
        } else {
            for (int i :jTable1.getSelectedRows()){
                try {                        
                    dao.eliminar((int)jTable1.getValueAt(i, 0)); // llamando el metodo dao.eliminar se elimina la fila desde la BD
                    model.removeRow(i);      // Con el metodo removeRow() se quita la fila del modelo desde el frontend. Esto se hace para evitar volver a hacer la consulta con LoadConductores() //LoadConductores();  //Este metodo se llama para que la tabla se recargue y se actualice con la fila eliminada. Basicamente, se vuelve a hacer la consulta en la BD

                } catch(Exception e) {
                    System.out.println(e.getMessage());
                }
           }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    
    
    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        // evt Click en el Btn Buscar:                         
        try {            
            
            DAOLicencia dao = new DAOLicenciaImpl();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); //Genera el modelo de Tabla de la BD para ponerla en pantalla, y no en consola
            model.setRowCount(0);
            dao.listar(buscarTxt.getText()).forEach((u) -> model.addRow(new Object[]{u.getId_licencia(), u.getCedula_cond(), u.getFecha_Expedicion(), u.getFecha_Vencimiento(), u.getCategoriaLic(), u.getRestriccion_Lic(), u.getEstado_Lic()}));          
                                                                                    
            
        } catch(Exception e) {
            System.out.println(e.getMessage());
        }
        
        
        
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        // TODO add your handling code here:
        Dashboard.showJPanel(new UpLicencias());
    }//GEN-LAST:event_newBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // evt para cuando se seleccione un elemento de la tabla y se oprima Boton Editar:
        
        if (jTable1.getSelectedRow() > -1) {            //El selectedRow debe ser mayor a -1. Quiere decir que se selecciona desde el índice 0
            try {
                int LicenciaId = (int) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
                DAOLicencia dao = new DAOLicenciaImpl();
                Dashboard.showJPanel(new UpLicencias(dao.getLicenciaById(LicenciaId))); //Cuando trabajamos con el DAO, es esencial meterlo en un try - catch
            
            } catch(Exception e) {
                System.out.println(e.getMessage());
            }
             
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar una fila para editar \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void buscarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarTxtActionPerformed

    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JPanel bg;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JTextField buscarTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton newBtn;
    // End of variables declaration//GEN-END:variables
}
